[build-system]
requires = ["setuptools", "wheel"]
build-backend = "setuptools.build_meta"

[tool.setuptools.packages.find]
where = ["src"]

[project]
name = "pdoflow"
version = "0.1.13"
description = "A package to manage PDO compute nodes cooperatively."
authors = [{name="William Fong", email="willfong@mit.edu"}]
readme = "README.md"

dependencies = [
    "deal==4.24.4",
    "sqlalchemy==2.0.29",
    "click==8.1",
    "kavli-configurables",
    "psycopg[binary]>=3",
    "loguru==0.7.2",
    "tabulate==0.9.0"
]


[project.urls]
Home = "https://tessgit.mit.edu/wcfong/pdoflow"

[project.scripts]
pdoflow = 'pdoflow.cli:pdoflow_main'

[project.optional-dependencies]
dev = [
    "coverage",
    "pytest==8.2.0",
    "pytest-timeout",
    "pytest-xdist",
    "mypy==1.10",
    "sqlalchemy-stubs==0.4",
    "black==24.4.2",
    "hypothesis==6.100.5"
]

[tool.mypy]
plugins = "sqlalchemy.ext.mypy.plugin"
files = "src"
warn_unreachable = true

[tool.isort]
profile = "black"

[tool.black]
line-length=80

[tool.flake8]
max-line-length = 80
files = "src"

[tool.coverage.run]
branch = true
source = ["pdoflow"]
omit = [
    "*/tests/*",
    "*/__pycache__/*",
    "*/site-packages/*",
    "*/sitecustomize.py",
]
parallel = true
concurrency = ["multiprocessing", "thread"]
context = "{env_name}"
sigterm = true

[tool.coverage.paths]
source = [
    "src/pdoflow",
    ".tox/*/lib/python*/site-packages/pdoflow",
    ".tox\\*\\Lib\\site-packages\\pdoflow",
]

[tool.coverage.report]
precision = 2
show_missing = true
skip_covered = false
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if TYPE_CHECKING:",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "@abstractmethod",
]

[tool.coverage.html]
directory = "htmlcov"
title = "PDOFlow Coverage Report"

[tool.coverage.json]
output = "coverage.json"
pretty_print = true

[tool.pytest.ini_options]
minversion = "8.0"
testpaths = ["tests"]
pythonpath = ["src"]
addopts = [
    "--strict-markers",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
]
timeout = 30
