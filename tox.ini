[tox]
requires =
    tox >= 4
env_list = clean, mypy, flake8, py{39, 310, 311, 312}, docs


[testenv]
description = run unit tests
deps =
    pytest==8.2.0
    pytest-postgresql==6.0.0
    mypy==1.10
    black==24.4.2
    tox-docker==4.1.0
    hypothesis==6.100.5
    pytest-sugar
    pytest-cov
    pytest-xdist
    coverage[toml]>=7.0
commands =
    pytest -n auto --cov=pdoflow --cov-config=pyproject.toml --cov-append --cov-report=term-missing --basetemp={envtmpdir} {posargs:tests}

setenv =
    COVERAGE_PROCESS_START = pyproject.toml
    PYTHONPATH = {toxinidir}/src

[testenv:flake8]
description = ensure project and tests conform to flake8
deps = flake8
max-line-length = 81
commands = flake8 src tests

[testenv:mypy]
description = Run mypy static checking
deps =
    mypy
    sqlalchemy[mypy]
    {[testenv]deps}
commands =
    mypy --install-types --non-interactive {toxinidir}/src/

[testenv:clean]
deps = coverage[toml]>=7.0
skip_install = true
commands = coverage erase

[testenv:coverage-check]
deps = coverage[toml]>=7.0
skip_install = true
commands =
    coverage combine
    coverage report --fail-under=80

[testenv:docs]
description = invoke sphinx-build to build the HTML docs
deps = sphinx
commands = sphinx-build -M html docs/source docs/build


[testenv:gh-actions]
description = GitHub Actions specific test environment
passenv =
    CI
    GITHUB_*
commands =
    pytest --cov=pdoflow --cov-config=pyproject.toml --cov-report=xml --cov-report=term-missing {posargs:tests}

[docker:db]
image = postgres:14-alpine
environment =
    POSTGRES_USER=postgres
    POSTGRES_PASSWORD=testing
    POSTGRES_DB=postgres
